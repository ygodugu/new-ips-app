{"version":3,"file":"static/js/97.dfd56f75.chunk.js","mappings":"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","sources":["axiosInstance.js","pages/Temples/TempleServiceForm.js","pages/Temples/AddTempleService.js","pages/Temples/ViewTemple.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL,\n});\n\naxiosInstance.interceptors.request.use(\n    function (config) {\n        config.headers['Content-Type'] = 'application/json';\n        config.headers['Accept'] = '*/*';\n        config.headers['Access-Control-Allow-Origin'] = '*';\n        config.headers['Access-Control-Allow-Headers'] = 'Origin, X-Requested-With, Content-Type, Accept';\n        const token = localStorage.getItem('token')\n        if (token) {\n            config.headers['Authorization'] = 'Bearer ' + token\n        }\n        return config;\n    },\n    function (error) {\n        // Do something with request error\n        return Promise.reject(error);\n    }\n);\n\naxiosInstance.interceptors.response.use(\n    function (response) {\n        return response;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);","import { useFormik } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport { object, string } from \"yup\";\nimport { axiosInstance } from \"../../axiosInstance\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from \"react-datepicker\";\n\nlet templeServiceSchema = object({\n  servicesId: string().required(\"Select Service\"),\n});\n\nexport const TempleServiceForm = ({ onSubmit, initialValues }) => {\n  const [services, setServices] = useState([]);\n  const [priests, setPriests] = useState([]);\n  const [temples, setTemples] = useState([]);\n\n  useEffect(() => {\n    axiosInstance\n      .get(\"/services/name\")\n      .then((res) =>\n        res.data.map((p) => ({\n          id: p.id,\n          label: `${p.name} ($${p.defaultPrice})`,\n        }))\n      )\n      .then((data) => {\n        setServices(data);\n        if (initialValues.servicesId) {\n          formik.setFieldValue(\n            \"services\",\n            data.filter((x) => x.id === initialValues.servicesId)\n          );\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    axiosInstance\n      .get(\"/priests/designation\")\n      .then((res) =>\n        res.data.map((p) => ({\n          id: p.id,\n          label: p?.user?.userName,\n        }))\n      )\n      .then((data) => {\n        setPriests(data);\n        if (initialValues.priestId) {\n          formik.setFieldValue(\n            \"priests\",\n            data.filter((x) => x.id === initialValues.priestId)\n          );\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    axiosInstance\n      .get(\"/temples/name\")\n      .then((res) =>\n        res.data.map((p) => ({\n          id: p.id,\n          label: p.name,\n        }))\n      )\n      .then((data) => {\n        setTemples(data);\n        if (initialValues.templeId) {\n          formik.setFieldValue(\n            \"temples\",\n            data.filter((x) => x.id === initialValues.templeId)\n          );\n        }\n      });\n  }, []);\n\n  const handleSubmit = (values, { validateForm }) => {\n    validateForm(values).then((res) => {\n      onSubmit(values);\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: templeServiceSchema,\n    validateOnBlur: true,\n    validateOnChange: false,\n  });\n  console.log(formik.errors);\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <div className=\"row\">\n        {/* <aside className=\"col-md-6\">\n          <div className=\"form-group\">\n            <label htmlFor=\"cityId\">Temple</label>\n            <Typeahead\n              selected={formik.values.temples}\n              id=\"templeId\"\n              options={temples}\n              onChange={(value) => {\n                if (value?.length > 0) {\n                  formik.setFieldValue(\"templeId\", value[0].id);\n                  formik.setFieldValue(\"temples\", value);\n                } else {\n                  formik.setFieldValue(\"templeId\", \"\");\n                  formik.setFieldValue(\"temples\", []);\n                }\n              }}\n              placeholder=\"Choose a temple...\"\n            />\n          </div>\n        </aside> */}\n        <aside className=\"col-md-6\">\n          <div className=\"form-group\">\n            <label htmlFor=\"cityId\">Service</label>\n            <Typeahead\n              selected={formik.values.services}\n              id=\"servicesId\"\n              options={services}\n              onChange={(value) => {\n                if (value?.length > 0) {\n                  formik.setFieldValue(\"servicesId\", value[0].id);\n                  formik.setFieldValue(\"services\", value);\n                } else {\n                  formik.setFieldValue(\"servicesId\", \"\");\n                  formik.setFieldValue(\"services\", []);\n                }\n              }}\n              placeholder=\"Choose a service...\"\n            />\n          </div>\n        </aside>\n      </div>\n      <div className=\"modal-footer d-flex justify-content-end\">\n        <button type=\"submit\" className=\"btn mb-2 btn-primary\">\n          Save\n        </button>\n      </div>\n    </form>\n  );\n};\n","import { useMutation } from \"@tanstack/react-query\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { axiosInstance } from \"../../axiosInstance\";\nimport { TempleServiceForm } from \"./TempleServiceForm\";\n\nconst addTempleService = (payload) => {\n  return axiosInstance.post(`/temple-services`, payload);\n};\n\nexport const AddTempleServiceModal = ({\n  handleSuccess,\n  handleClose,\n  templeId,\n}) => {\n  const addTempleServiceMutation = useMutation({\n    mutationFn: addTempleService,\n  });\n  const initialValues = {\n    services: [],\n    priests: [],\n    bookingDate: \"\",\n    temples: [],\n  };\n\n  const saveTempleService = (values) => {\n    const { temples, services, priests, ...rest } = values;\n    addTempleServiceMutation.mutate(\n      { ...rest, templeId: +templeId },\n      {\n        onSuccess: handleSuccess,\n      }\n    );\n  };\n\n  return (\n    <Modal show={true} onHide={handleClose} size=\"lg\">\n      <Modal.Header closeButton={false}>\n        <Modal.Title>New Temple Service</Modal.Title>\n        <button\n          type=\"button\"\n          className=\"close\"\n          data-dismiss=\"modal\"\n          aria-label=\"Close\"\n          onClick={handleClose}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </Modal.Header>\n      <Modal.Body>\n        <TempleServiceForm\n          initialValues={initialValues}\n          onSubmit={saveTempleService}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { axiosInstance } from \"../../axiosInstance\";\nimport { AddTempleServiceModal } from \"./AddTempleService\";\n\nconst getTempleDetails = (id) => {\n  return axiosInstance.get(`/temples/${id}`).then((res) => res.data);\n};\n\nconst getTempleServices = (templeId) => {\n  return axiosInstance\n    .get(`/temple-services?templeId=${templeId}&pageIndex=0&pageSize=20`)\n    .then((res) => res.data);\n};\n\nexport const ViewTemple = () => {\n  const { id } = useParams();\n  const [showAddServiceModal, setShowAddServiceModal] = useState(false);\n  const [showEditServiceModal, setShowEditServiceModal] = useState(false);\n  const [templeServiceId, setTempleServiceId] = useState();\n  const { data: templeDetails, error } = useQuery({\n    queryKey: [\"temple-details\", id],\n    queryFn: () => getTempleDetails(id),\n  });\n\n  const { data: templeServices, isLoading: templeServicesLoading } = useQuery({\n    queryKey: [\"temple-services\", id],\n    queryFn: () => getTempleServices(id),\n  });\n\n  const handleAddServiceClick = () => {\n    setShowAddServiceModal(true);\n  };\n\n  const handleEditServiceClick = () => {\n    setShowEditServiceModal(true);\n  };\n\n  const handleAddTempleServiceSuccess = () => {\n    setShowAddServiceModal(false);\n    // refetch();\n  };\n\n  const handleEditTempleServiceSuccess = () => {\n    setShowEditServiceModal(false);\n    // refetch();\n  };\n\n  return (\n    <>\n      {templeDetails && (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12\">\n            <div className=\"row heading-add\">\n              <aside className=\"col-sm-10\">\n                <h2 className=\"mb-0 page-title\">Temple Details</h2>\n              </aside>\n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6\">\n                <div className=\"card shadow\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">Temple Details</h5>\n                    <div className=\"row\">\n                      <div className=\"col-md-5 mt-1\">\n                        <label>Temple Name</label>\n                      </div>\n                      <div className=\"col-md-7 mt-1\">\n                        <label>{templeDetails.name}</label>\n                      </div>\n                      <div className=\"col-md-5 mt-1\">\n                        <label>Temple Board</label>\n                      </div>\n                      <div className=\"col-md-7 mt-1\">\n                        <label>{templeDetails.boardName}</label>\n                      </div>\n                      <div className=\"col-md-5 mt-1\">\n                        <label>Legal Identification Number</label>\n                      </div>\n                      <div className=\"col-md-7 mt-1\">\n                        <label>{templeDetails.legalIdentificationNumber}</label>\n                      </div>\n                      <div className=\"col-md-5 mt-1\">\n                        <label>Temple Type</label>\n                      </div>\n                      <div className=\"col-md-7 mt-1\">\n                        <label>{templeDetails.templeType}</label>\n                      </div>\n                      <div className=\"col-md-5 mt-1\">\n                        <label>Mobile</label>\n                      </div>\n                      <div className=\"col-md-7 mt-1\">\n                        <label>{templeDetails.phone}</label>\n                      </div>\n                      <div className=\"col-md-5 mt-1\">\n                        <label>Website</label>\n                      </div>\n                      <div className=\"col-md-7 mt-1\">\n                        <label>{templeDetails.website}</label>\n                      </div>\n                      <div className=\"col-md-5 mt-1\">\n                        <label>Year Of Establishment</label>\n                      </div>\n                      <div className=\"col-md-7 mt-1\">\n                        <label>\n                          {new Date(\n                            templeDetails.yearOfEstablishment\n                          ).getFullYear()}\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-6\"></div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"card shadow\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">Temple Images</h5>\n                  </div>\n                </div>\n                <div className=\"col-md-6\"></div>\n              </div>\n            </div>\n            <div className=\"row my-2\">\n              <div className=\"col-md-6\">\n                <div className=\"card shadow\">\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <aside className=\"col-sm-10\">\n                        <h5 className=\"card-title\">Temple Services</h5>\n                      </aside>\n                      <aside className=\"col-sm-2 add-sec\">\n                        <button\n                          className=\"bttn\"\n                          onClick={handleAddServiceClick}\n                        >\n                          Add\n                        </button>\n                      </aside>\n                    </div>\n                    <div>\n                      <table className=\"table mt-2\">\n                        <thead>\n                          <tr>\n                            <th>Name</th>\n                            <th>Price</th>\n                            <th>Time</th>\n                            <th>Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {templeServicesLoading ? (\n                            <tr>\n                              <td rowSpan=\"10\" colSpan=\"4\">\n                                <div className=\"text-center py-5\">\n                                  <Spinner animation=\"border\" />\n                                </div>\n                              </td>\n                            </tr>\n                          ) : (\n                            templeServices.data.map((p) => (\n                              <tr key={p.id}>\n                                <td>{p.name}</td>\n                                <td>{p.boardName}</td>\n\n                                <td></td>\n                                <td></td>\n                                <td></td>\n\n                                {/* <td className=\"actions\">\n                                <EditIcon onClick={handleEditClick(p.id)} />\n                                <DeleteIcon onClick={handleDelete(p.id)} />\n                              </td> */}\n                              </tr>\n                            ))\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-6\"></div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"card shadow\">\n                  <div className=\"card-body\">\n                    <div className=\"row\">\n                      <aside className=\"col-sm-10\">\n                        <h5 className=\"card-title\">Priests</h5>\n                      </aside>\n                      <aside className=\"col-sm-2 add-sec\">\n                        <button\n                          className=\"bttn\"\n                          onClick={handleAddServiceClick}\n                        >\n                          Add\n                        </button>\n                      </aside>\n                    </div>\n                    <div>\n                      <table className=\"table mt-2\">\n                        <thead>\n                          <tr>\n                            <th>Priest Name</th>\n                            <th>Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {/* {data.data.map((p) => (\n                              <tr key={p.id}>\n                                <td>{p.name}</td>\n                                <td>{p.boardName}</td>\n\n                                <td></td>\n                                <td></td>\n                                <td></td>\n\n                                <td className=\"actions\">\n                                  <EditIcon onClick={handleEditClick(p.id)} />\n                                  <DeleteIcon onClick={handleDelete(p.id)} />\n                                </td>\n                              </tr>\n                            ))} */}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-6\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {showAddServiceModal ? (\n        <AddTempleServiceModal\n          handleSuccess={handleAddTempleServiceSuccess}\n          templeId={id}\n          handleClose={() => setShowAddServiceModal(false)}\n        />\n      ) : null}\n      {showEditServiceModal ? (\n        <AddTempleServiceModal\n          handleSuccess={handleEditTempleServiceSuccess}\n          id={templeServiceId}\n          templeId={id}\n          handleClose={() => setShowEditServiceModal(false)}\n        />\n      ) : null}\n    </>\n  );\n};\n"],"names":["axiosInstance","axios","baseURL","process","interceptors","request","use","config","headers","token","localStorage","getItem","error","Promise","reject","response","templeServiceSchema","object","servicesId","string","required","TempleServiceForm","_ref","onSubmit","initialValues","_useState","useState","_useState2","_slicedToArray","services","setServices","_useState3","_useState4","setPriests","_useState5","_useState6","setTemples","useEffect","then","res","data","map","p","id","label","concat","name","defaultPrice","formik","setFieldValue","filter","x","_p$user","user","userName","priestId","templeId","useFormik","values","_ref2","validateForm","validationSchema","validateOnBlur","validateOnChange","console","log","errors","_jsxs","handleSubmit","children","_jsx","className","htmlFor","Typeahead","selected","options","onChange","value","length","placeholder","type","addTempleService","payload","AddTempleServiceModal","handleSuccess","handleClose","addTempleServiceMutation","useMutation","mutationFn","Modal","show","onHide","size","closeButton","onClick","priests","bookingDate","temples","rest","_objectWithoutProperties","_excluded","mutate","_objectSpread","onSuccess","ViewTemple","useParams","showAddServiceModal","setShowAddServiceModal","showEditServiceModal","setShowEditServiceModal","templeServiceId","_useQuery","useQuery","queryKey","queryFn","getTempleDetails","templeDetails","_useQuery2","templeServices","templeServicesLoading","isLoading","handleAddServiceClick","_Fragment","boardName","legalIdentificationNumber","templeType","phone","website","Date","yearOfEstablishment","getFullYear","rowSpan","colSpan","Spinner","animation"],"sourceRoot":""}